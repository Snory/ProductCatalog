// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductCatalog.Persistence;

#nullable disable

namespace ProductCatalog.Persistence.Migrations
{
    [DbContext(typeof(ProductCatalogContext))]
    [Migration("20240401123326_View")]
    partial class View
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductCatalog.Core.CategoryManagement.Aggregate.CategoryAggregate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Category_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Categories", "categoriesmanagement");
                });

            modelBuilder.Entity("ProductCatalog.Core.ProductManagement.Aggregate.ProductAggregate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Product_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Ean")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset>("LastValueChange")
                        .HasColumnType("datetimeoffset");

                    b.ComplexProperty<Dictionary<string, object>>("Quantity", "ProductCatalog.Core.ProductManagement.Aggregate.ProductAggregate.Quantity#Quantity", b1 =>
                        {
                            b1.Property<int>("value")
                                .HasColumnType("int")
                                .HasColumnName("Quantity");
                        });

                    b.HasKey("Id");

                    b.ToTable("Products", "productsmanagement");
                });

            modelBuilder.Entity("ProductCatalog.Core.ProductManagement.Aggregate.ProductAggregate", b =>
                {
                    b.OwnsOne("ProductCatalog.Core.ProductCatalogs.ValueObjects.MonetaryValue", "ProductValue", b1 =>
                        {
                            b1.Property<int>("ProductAggregateId")
                                .HasColumnType("int");

                            b1.Property<string>("CurrencyCode")
                                .IsRequired()
                                .HasMaxLength(3)
                                .HasColumnType("nvarchar(3)")
                                .HasColumnName("CurrencyCode");

                            b1.Property<decimal>("Price")
                                .HasPrecision(19, 3)
                                .HasColumnType("decimal(19,3)")
                                .HasColumnName("Price");

                            b1.HasKey("ProductAggregateId");

                            b1.ToTable("Products", "productsmanagement");

                            b1.WithOwner()
                                .HasForeignKey("ProductAggregateId");
                        });

                    b.OwnsMany("ProductCatalog.Core.Shared.CategoryId", "CategoryIds", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<int>("Product_ID")
                                .HasColumnType("int");

                            b1.Property<int>("Value")
                                .HasColumnType("int")
                                .HasColumnName("Category_ID");

                            b1.HasKey("Id");

                            b1.HasIndex("Product_ID");

                            b1.ToTable("ProductCategories", "productsmanagement");

                            b1.WithOwner()
                                .HasForeignKey("Product_ID");
                        });

                    b.Navigation("CategoryIds");

                    b.Navigation("ProductValue")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
